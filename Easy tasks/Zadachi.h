#pragma once

#include <vector>
#include <string>

using namespace std;
namespace Zadachi
{
	void Zadacha1();
	void Zadacha2();
	void Zadacha3();
	void Zadacha4();
	void Zadacha1d();
	void Zadacha2d();
	void Zadacha3d();
	void Zadacha4d();
	void Zadacha5d();
	void Zadacha6d();
	void Zadacha7d();
	void Zadacha8d();
	void Zadacha9d();
	void Zadacha10d();
	void Zadacha11d();
	void Zadacha12d();
	void Zadacha13a();
	void Zadacha5();
	void Zadacha6();
	void Zadacha7();
	void Zadacha8();
	void Zadacha13d();
	void Zadacha14d();
	void Zadacha15d();
	void Zadacha16d();
	void Zadacha17d();
	void Zadacha18d();
	void Zadacha19d();
	void Zadacha19dv2();
	void Zadacha20d();
	void Zadacha21d();
	void Zadacha22d();
	void Zadacha22dv2();
	void Zadacha23d();
	void Zadacha24();
	void Zadacha25();
	void Zadacha26();
	void Zadacha27();
	void Zadacha28();
	void Zadacha29();
	void Zadacha30();
	void Zadacha31();
	void Zadacha32();
	void Zadacha33();
	void Zadacha34d();
	void Zadacha35d();
	void Zadacha36d();
	void Zadacha37d();
	void Zadacha38d();
	void Zadacha39d();
	void Zadacha40d();
	void Zadacha41d();
	void Zadacha42d();
	void Zadacha43d();
	void Zadacha44d();
	void Zadacha45d();
	void Zadacha46d();
	void Zadacha47d();
	void Zadacha48d();
	void Zadacha49d();
	void Zadacha50d();
	void Zadacha51d();
	void Zadacha52d();
	void Zadacha53d();
	void Zadacha54d();
	void Zadacha55d();
	void Zadacha56d();
	void Zadacha57d();
	void Zadacha58d();
	void Zadacha59d();
	void Zadacha34();
	void Zadacha35();
	void Zadacha36();
	void Zadacha37();
	void Zadacha38();
	void Zadacha39();
	void Zadacha39v2();
	void Zadacha40();
	void Zadacha41();
	void Zadacha60d();
	void Zadacha61d();
	void Zadacha62d();
	void Zadacha63d();
	int Zadacha64_func1(char str[], char Symbol, int& MaxOccurrences);
	void Zadacha64d();
	void Zadacha65d();
	void Zadacha66d();
	void Zadacha66v2();
	void Zadacha67d();
	void Zadacha68d();
	int* Zadacha69dfunc(int arr[], int sizearr, int& sizeculling);
	void Zadacha69d();
	char* Zadacha70dfunc(char arr[], int size, char c);
	void Zadacha70d();
	int Zadacha71dfunc(char a[], int size_a);
	void Zadacha71d();
	void Zadacha72d();
	void Zadacha73d();
	void Zadacha74d();
	int delchar_Zadacha75d(char s[], char c);
	void Zadacha75d();
	void Zadacha76d();
	void Zadacha77d();
	void revers_Zadacha78d(char s[]);
	void Zadacha78d();
	void Zadacha79d();
	void Zadacha80d();
	void Zadacha81d();
	void Zadacha42();
	void Zadacha43();
	void Zadacha44();
	void Zadacha45();
	void Zadacha82d_transp(float* X[], int MaxN);
	void Zadacha82d_transp2(float* X[], int MaxN, int N);
	void Zadacha82d();
	int Zadacha82d_sum(int* X[], int MaxN);
	void Zadacha83d();
	char* Zadacha84d_func(char* str, int pos, int kol);
	void Zadacha84d();
	char* Zadacha85d_del(char* s, int kol, int pos);
	char* Zadacha85d_del2(char* s, int kol, int pos);
	void Zadacha85d();
	void Zadacha86d();
	int** Zadacha87d_funk_v1(int arr[], int& n, int& size1, int& size2);
	void Zadacha87d();
	struct Zadacha88d_Trec { int phone; float dt; };
	Zadacha88d_Trec* Zadacha88dDlit(Zadacha88d_Trec* arr, int& n);
	void Zadacha88d();
	bool Zadacha89d_func(char str[], int s, int e);
	void Zadacha89d();
	int Zadacha90d_calc(int* a);
	void Zadacha90d_print_result(int* a);
	void Zadacha90d();
	int Zadacha91Track(char** a, int& rows, int& columns, int& sr, int& sc, int step);
	void Zadacha91d();
	double Zadacha46_f(double x);
	void Zadacha46();
	int Zadacha47_f(int n);
	void Zadacha47();
	int** Zadacha48_funk(int** M, int* n, int m);   //n - кол-во строк m - кол-во столбцов;
	void Zadacha48();
	void Zadacha49();
	void Zadacha49_string();
	void Zadacha50();
	void Zadacha50_string();
	void Zadacha50_rasiasnenia();
	void Zadacha51();
	void Zadacha52();
	void Zadacha53();
	void Zadacha92d();
	void Zadacha93d();
	void Zadacha94d();
	void Zadacha95d_func(char arr[][20], int size, char raz[]);
	void Zadacha95d();
	void Zadacha96d();
	void Zadacha97d();
	void Zadacha98d_funk(vector<string*>& w, string str);
	void Zadacha98d();
	struct Zadacha99d_dec { char* w; char* t; };;
	void Zadacha99d();
	void Zadacha100d();
	void Zadacha101d();
	void Zadacha102d();
	void Zadacha103d();
	void Zadacha104d();
	void Zadacha54();
	void Zadacha55(int argc, char* argv[]);
	void Zadacha56();
	void Zadacha57();
	void Zadacha58();
	void Zadacha59();
	void Zadacha60();
	void Zadacha61();
	void Zadacha62();

	struct Z105d_TDate {
		unsigned short nMonthDay : 5; // 0..31 
		unsigned short nMonth : 4; // 0..12 
		unsigned short nYear : 7; // 0..100
	};
	#define Z105d_TypeSort(F) bool (*F)(void)
	void Zadacha105d();
	void Z105d_SortDate(vector<Z105d_TDate>& vd, Z105d_TypeSort(F));
	bool Z105d_VarSort();
	bool Z105d_СompTDate(const Z105d_TDate& i1, const Z105d_TDate& i2, const bool& compare);
}