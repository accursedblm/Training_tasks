#include "tabl.h"
#include <cstdlib>
#include <locale>
#include "iostream"
using namespace std;
int main()
{
	setlocale(LC_ALL, "Russian");
	cout << "Введите текст" << endl;
	tabl T; // таблица слов
	T.kol = 0; // Вначале слов нет
	int j, i, p = 0; //p - номер вхождения слова в текст
	int flag;    // выбор действия
	char len[100];      // Исходная строка
	char str[20]; // текущее слово
	// Заполнение таблицы слов
	cin.getline(len, 100);
	j = 0;
	while (len[j] != '\0')
	{                                                                                                                                      // читаем символ из потока
		// Пропуск пробельных символов
		while (len[j] != '\0' && len[j] == ' ')     // Пока c – пробельный символ 
			j++;                                   //  пропускаем
		if (len[j] != '\0')                            // Выделение слова
		{
			p++;  // Новое слово
			i = 0;
			while (len[j] != '\0' && len[j] != ' ')     // Пока c не пробел
			{
				str[i++] = len[j];             // Заносим символ в слово
				j++;          // Переходим к следующему символу
			}
			str[i] = '\0';     //  Завершаем слово
			if (T.poisk(str) >= 0)   // Если слово уже было
				T.newpos(T.poisk(str), p);
			else                // Если новое слово
				T.newword(init(str, p));
		}
	}
	do
	{
		cout << "Выберите пункт:" << endl;
		cout << "0.Завершение работы" << endl;
		cout << "1.Распечатка слов" << endl;
		cout << "2.Сортировка по словам" << endl;
		cout << "3.Определение слова в заданной позиции" << endl;
		cout << "4.Распечатка слов в порядке появления в тексте" << endl;
		cout << "5.Распечатка слов в обратном порядке появления в тексте" << endl;
		cout << "6.Добавление слова в список" << endl;
		cout << "7.Удаление слова с заданным номером в таблице" << endl;
		cout << "8.Удалить все повторяющиеся слова в списке" << endl;
		cin >> flag;
		switch (flag)
		{
		case 0: break;
		case 1: T.print(); break; // Распечатка слов
		case 2: T.sort(); break; // Сортировка по словам
		case 3: cout << "Введите позицию: "; //Определение слова в заданной позиции
			cin >> i; cout << T.nword(i) << endl; break;
		case 4: T.printtext(); break;//Распечатка слов в порядке появления в тексте
		case 5: T.printrewerstext(); break;//Распечатка слов в обратном порядке появления в тексте
		case 6: cout << "Введите новое слово: "; //Добавление слова в список
			cin >> str; // Водит слово (набор литер до первого пробельного символа)
			if (T.poisk(str) >= 0)   // Если слово уже было
				T.newpos(T.poisk(str), T.kolword() + 1);
			else                // Если новое слово
				T.newword(init(str, T.kolword() + 1));
			break;
		case 7: cout << "Введите номер слова" << endl; cin >> i; //Удаление слова с заданным номером в списке
			T.delword(i); break;
		case 8: for (int i = 0; i < T.kol; i++) // перебираем слова
			if (T.mas[i]->n > 1) // Если слово входит боле одного раза
			{
				T.delword(i);  // удаляем слово
				i--;           // для перепроверки позиции после сдвига
			}
			  break;
		default: cout << "неверный номер\n ";
		}
	} while (flag);
	// освобождение памяти
	while (T.kol) // пока слова есть
		T.delword(0); //  удаляем первое слово
	system("pause");
	return 0;
}